<mvc:View
    height="100%"
    controllerName="cc.slova.textEditor.Main"
    xmlns="sap.m"
    xmlns:mvc="sap.ui.core.mvc"
    xmlns:core="sap.ui.core"
    xmlns:f="sap.ui.layout.form"
    xmlns:l="sap.ui.layout"
    xmlns:macros="sap.fe.macros">
    <Page title="{createdBy} / {name} [{lang_code}]">
        <customHeader>
            <Toolbar>
                <ToolbarSpacer />
                <!-- <Title text="{createdBy} [{lang_code}]" /> -->
                <Input editable="{= %{/Profile/id} !== 'anonymous' }" width="12rem" value="{name}" />
                <ComboBox  editable="{= %{/Profile/id} !== 'anonymous' }" width="10rem" 
                        selectedKey="{lang_code}" showSecondaryValues= "true" 
                        items="{/Languages}">
                        <core:ListItem key="{code}" text="{name}" additionalText = "{code}"/>
                </ComboBox>
                <ToolbarSpacer />
                <ToggleButton enabled="{= %{/Profile/id} !== 'anonymous' }" icon="sap-icon://menu" pressed="{ui>/showSidePanel}" />
            </Toolbar>
        </customHeader>    
        <l:DynamicSideContent showSideContent="{ui>/showSidePanel}">
            <l:mainContent>
                <IconTabBar selectedKey="{ui>/selectedTab}">
                    <items>
                    <IconTabFilter text="Input" key="input">
                    <TextArea enabled="{= %{/Profile/id} !== 'anonymous' }" id="inputText" width="100%" rows="20" value="{input}"/>
                    </IconTabFilter>
                    <IconTabFilter text="Output" key="output">
                        <Panel _headerText="Text" expandable="false" expanded="true" _class="sapUiMediumMarginTop" >
                            <l:VerticalLayout class="sapUiContentPadding" content="{path:'sentences', sorter: { path: 'index', descending: false} }">
                                    <l:HorizontalLayout> 
                                        <Link text="..." emphasized="true" press="showSentencePopover" />
                                        <l:HorizontalLayout allowWrapping="true" content="{path:'tokens', sorter: { path: 'index', descending: false} }">
                                            <Link class="sapUiSmallMarginBegin" accessibleRole="Button" text="{parts:[
                                                {path:'form'},
                                                {path:'pos'},
                                                {path: '/Profile/pos'}
                                            ],formatter:'cc.slova.textEditor.globalFormatter.linkFormat'}" 
                                            press="showWordPopover" />
                                    </l:HorizontalLayout>
                                </l:HorizontalLayout>
                            </l:VerticalLayout>
                        </Panel>
                        <Panel headerText="Sentences" expandable="true" expanded="false" class="sapUiMediumMarginTop">
                            <macros:FilterBar metaPath="sentences/@com.sap.vocabularies.UI.v1.SelectionFields" id="FilterBarSent" liveMode="true" />
                            <macros:Table metaPath="sentences/@com.sap.vocabularies.UI.v1.LineItem" id="macroTableSent" filterBar="FilterBarSent" />
                        </Panel>
                        <Panel headerText="Words" expandable="true" expanded="false" class="sapUiMediumMarginTop">
                            <macros:FilterBar metaPath="words/@com.sap.vocabularies.UI.v1.SelectionFields" id="FilterBarWord" liveMode="true" />
                            <macros:Table metaPath="words/@com.sap.vocabularies.UI.v1.LineItem" id="macroTableWord" filterBar="FilterBarWord" />
                        </Panel>
                    </IconTabFilter>
                    </items>
                </IconTabBar>
            </l:mainContent>
            <l:sideContent id="withinArea">

                <f:SimpleForm visible="{= ${ui>/selectedTab}==='input' }" editable="true" layout="ResponsiveGridLayout">
                    <Toolbar>
                        <ToolbarSpacer/>
                        <Label text="{i18n>special}"/>
                        <ToolbarSpacer/>
                    </Toolbar>
                    <Label text="{i18n>special}"/>
                    <Input value="č ć dž đ š ž  - Č Ć DŽ Đ Š Ž" />
                </f:SimpleForm>

                <f:SimpleForm visible="{= ${ui>/selectedTab}==='input' }" editable="true" layout="ResponsiveGridLayout">
                    <Toolbar>
                        <ToolbarSpacer/>
                        <Label text="{i18n>pos}" press="parseText"/>
                        <ToolbarSpacer/>
                    </Toolbar>
                    <Label text="{i18n>pos}" />
                    <MultiComboBox binding="{/Profile}" selectedKeys="{path:'pos', targetType:'any', formatter:'.splitPosTokens' }" 
                            selectionChange=".changePos"
                            showSecondaryValues= "true" items="{/PartsOfSpeech}">
                        <core:ListItem key="{code}" text="{name}" additionalText = "{code}"/>
                    </MultiComboBox>
                </f:SimpleForm>
                
                <f:SimpleForm visible="{= ${ui>/selectedTab}==='input' }" editable="true" layout="ResponsiveGridLayout">
                    <Toolbar>
                        <ToolbarSpacer/>
                        <ToggleButton text="{i18n>captureAudio}" press="captureAudio"/>
                        <Button text="{i18n>speechToText}" press="speechToText" enabled="{= !!${ui>/mediaLink} }" />
                        <ToolbarSpacer/>
                        <!-- <Button text="{i18n>addSpeechToInput}" press="addSpeechToInput" enabled="{= !!${ui>/speechToTextResult} }" /> -->
                        <!-- <ToolbarSpacer/> -->
                    </Toolbar>

                    <Label text="{i18n>captureAudioResult}" />
                    <Link target="_blank" href="{ui>/mediaLink}"
                        text="{= !!${ui>/mediaLink} ? ${i18n>captureAudioResultListen} : ${i18n>captureAudioResultPending} }" />
                    <Label text="{i18n>speechToTextResult}" />
                    <Input value="{ui>/speechToTextResult}" showValueHelp="true" 
                        valueHelpIconSrc="sap-icon://translate" valueHelpRequest="googleTranslate">
                        <layoutData>
                            <l:GridData span="XL4 L4 M6 S11" />
                        </layoutData>
                    </Input>
                    <Button _text="{i18n>addSpeechToInput}" icon="sap-icon://edit-outside" press="addSpeechToInput" enabled="{= !!${ui>/speechToTextResult} }">

                        <layoutData>
                            <l:GridData span="XL1 L1 M1 S1" />
                        </layoutData>
                    </Button>

                    <Label text="{i18n>captureAudioSpeak}" />
                    <Link target="_blank" href="{ui>/mediaLink2}" press="textToSpeech" enabled="{= !!${ui>/speechToTextResult} }"
                        text="{= !!${ui>/speechToTextResult} ? ${i18n>captureAudioResultListen} : ${i18n>captureAudioResultPending} }" />

                </f:SimpleForm>

                <f:SimpleForm visible="{= ${ui>/selectedTab}==='input' }" editable="true" layout="ResponsiveGridLayout">
                    <Toolbar>
                        <ToolbarSpacer/>
                        <Button text="{i18n>generateText}" press="generateText"/>
                        <ToolbarSpacer/>
                    </Toolbar>

                    <Label text="{i18n>gptType}" />
                    <ComboBox binding="{/Profile}" selectedKey="{gptType}" items="{/TextTypes}">
                        <core:ListItem key="{code}" text="{name}" additionalText = "{code}"/>
                    </ComboBox>
                    <Label text="{i18n>gptSize}" />
                    <ComboBox binding="{/Profile}" selectedKey="{gptSize}" items="{/TextSizes}">
                        <core:ListItem key="{code}" text="{name}" additionalText = "{code}"/>
                    </ComboBox>
                    <Label text="{i18n>gptLocation}" />
                    <ComboBox binding="{/Profile}" selectedKey="{gptLocation}" items="{/TextLocations}">
                        <core:ListItem key="{code}" text="{name}" additionalText = "{code}"/>
                    </ComboBox>
                    <Label text="{i18n>gptModifier}" />
                    <ComboBox binding="{/Profile}" selectedKey="{gptModifier}" items="{/TextModifiers}">
                        <core:ListItem key="{code}" text="{name}" additionalText = "{code}"/>
                    </ComboBox>
                </f:SimpleForm>

                <f:SimpleForm visible="{= ${ui>/selectedTab}==='output' }" binding="{ui>/token}" editable="true" layout="ResponsiveGridLayout">
                    <Toolbar>
                        <ToolbarSpacer/>
                        <Button text="{i18n>syncChanges}" press="syncChanges"/>
                        <ToolbarSpacer/>
                    </Toolbar>

                    <Label text="{i18n>lemma}" />
                    <Input value="{ui>lemma}" showValueHelp="true" 
                        valueHelpIconSrc="sap-icon://education" valueHelpRequest="getDefinition"/>
                    <Label text="{i18n>pos}" />
                    <ComboBox selectedKey="{ui>pos}" showSecondaryValues= "true" items="{/PartsOfSpeech}">
                        <core:ListItem key="{code}" text="{name}" additionalText = "{code}"/>
                    </ComboBox>

                    <Title class="sapUiSmallMarginTop" text="{i18n>nomminalFeatures}" />
                    <Label text="{i18n>Case}" />
                    <ComboBox selectedKey="{ui>features/Case}" showSecondaryValues= "true" items="{/Cases}">
                        <core:ListItem key="{code}" text="{name}" additionalText = "{code}"/>
                    </ComboBox>
                    <Label text="{i18n>Gender}" />
                    <ComboBox selectedKey="{ui>features/Gender}" showSecondaryValues= "true" items="{/Genders}">
                        <core:ListItem key="{code}" text="{name}" additionalText = "{code}"/>
                    </ComboBox>
                    <Label text="{i18n>Number}" />
                    <ComboBox selectedKey="{ui>features/Number}" showSecondaryValues= "true" items="{/Numbers}">
                        <core:ListItem key="{code}" text="{name}" additionalText = "{code}"/>
                    </ComboBox>

                    <Title class="sapUiSmallMarginTop" text="{i18n>verbalFeatures}" />
                    <Label text="{i18n>Person}" />
                    <ComboBox selectedKey="{ui>features/Person}" showSecondaryValues= "true" items="{/Persons}">
                        <core:ListItem key="{code}" text="{name}" additionalText = "{code}"/>
                    </ComboBox>
                    <Label text="{i18n>Tense}" />
                    <ComboBox selectedKey="{ui>features/Tense}" showSecondaryValues= "true" items="{/Tenses}">
                        <core:ListItem key="{code}" text="{name}" additionalText = "{code}"/>
                    </ComboBox>
                    <Label text="{i18n>Aspect}" />
                    <ComboBox selectedKey="{ui>features/Aspect}" showSecondaryValues= "true" items="{/Aspects}">
                        <core:ListItem key="{code}" text="{name}" additionalText = "{code}"/>
                    </ComboBox>
                    <Label text="{i18n>Mood}" />
                    <ComboBox selectedKey="{ui>features/Mood}" showSecondaryValues= "true" items="{/Moods}">
                        <core:ListItem key="{code}" text="{name}" additionalText = "{code}"/>
                    </ComboBox>

                    <Title class="sapUiSmallMarginTop" text="{i18n>otherFeatures}" />
                    <Label text="{i18n>Voice}" />
                    <ComboBox selectedKey="{ui>features/Voice}" showSecondaryValues= "true" items="{/Voices}">
                        <core:ListItem key="{code}" text="{name}" additionalText = "{code}"/>
                    </ComboBox>
                    <Label text="{i18n>Degree}" />
                    <ComboBox selectedKey="{ui>features/Degree}" showSecondaryValues= "true" items="{/Degrees}">
                        <core:ListItem key="{code}" text="{name}" additionalText = "{code}"/>
                    </ComboBox>
                    <Label text="{i18n>VerbForm}" />
                    <ComboBox selectedKey="{ui>features/VerbForm}" showSecondaryValues= "true" items="{/VerbForms}">
                        <core:ListItem key="{code}" text="{name}" additionalText = "{code}"/>
                    </ComboBox>
                </f:SimpleForm>
            </l:sideContent>
        </l:DynamicSideContent>
        <footer>
            <Toolbar visible="{= %{/Profile/id} !== 'anonymous' }" >
                <ToolbarSpacer />
                    <Button text="{i18n>parseText}" press="parseText"/>
                <ToolbarSpacer />
            </Toolbar >
        </footer>
    </Page>
</mvc:View>
